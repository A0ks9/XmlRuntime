name: Android CI Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

# Optimize concurrency to prevent redundant builds
concurrency:
  group: android-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Add timeout to prevent hanging builds

    steps:
      # Step 1: Checkout with optimized settings
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Shallow clone for faster checkout
          submodules: false  # Disable submodules if not needed

      # Step 2: Set up Java with optimized settings
      - name: Set up Java (Temurin JDK 21)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'  # Enable built-in Gradle caching
          java-package: 'jdk'  # Only download JDK without JRE
          architecture: 'x64'  # Specify architecture for faster download

      # Step 3: Enhanced caching strategy
      - name: Cache Gradle & Maven Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.m2/repository
            ~/.android/build-cache
            ~/.android/cache
          key: ${{ runner.os }}-gradle-maven-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-maven-
            ${{ runner.os }}-gradle-

      # Step 4: Optimized Android SDK setup
      - name: Set up Android SDK, Build Tools, and NDK
        uses: android-actions/setup-android@v3
        with:
          sdk-version: '34'  # Use specific version instead of 'latest'
          build-tools: '34.0.0'  # Use specific version
          ndk-version: '25.2.9519653'  # Use specific version
          cache: true  # Enable SDK caching
          api-level: 34  # Specify API level
          target-api-level: 34  # Specify target API level

      # Step 5: Optimized plugin publishing
      - name: Publish Voyager Plugin
        env:
          GITHUB_USER: ${{ secrets.GITHUB_USER }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew :voyager-plugin:publishToMavenLocal --build-cache --no-daemon

      # Step 6: Optimized project build
      - name: Build Android Project
        env:
          GITHUB_USER: ${{ secrets.GITHUB_USER }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"
        run: |
          ./gradlew :app:assembleDebug \
            --parallel \
            --build-cache \
            --configure-on-demand \
            --no-daemon \
            --max-workers 4 \
            --scan

      # Step 7: Optimized artifact upload
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: APK
          path: app/build/outputs/apk/
          retention-days: 10
          compression-level: 9  # Maximum compression
          overwrite: true  # Overwrite existing artifacts
