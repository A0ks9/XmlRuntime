name: Android CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_apk:
    name: Build APK (Optimized)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository (Shallow Clone)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Speed up Git checkout by only fetching the latest commit

      - name: Cache Gradle & Native Builds
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
            ~/.m2/repository
            .cxx  # Cache native C++ build files
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Set up JDK 21 (Latest)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Set up Android SDK (Latest)
        uses: android-actions/setup-android@v3
        with:
          sdk-version: '35'  # Always use the latest API level

      - name: Set up Android NDK (Pre-installed)
        run: |
          echo "Using pre-installed NDK for speed"
          export ANDROID_NDK_HOME=$ANDROID_HOME/ndk/25.2.9519653
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV
          echo "ANDROID_NDK=$ANDROID_NDK_HOME" >> $GITHUB_ENV
          echo "PATH=$ANDROID_NDK_HOME:$PATH" >> $GITHUB_ENV

      - name: Grant Execute Permission for Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Use RAM Disk for Faster Builds
        run: |
          echo "Moving temporary Gradle and build files to RAM disk"
          sudo mount -t tmpfs -o size=4G tmpfs /home/runner/work/android-build
          mv .gradle /home/runner/work/android-build/gradle

      - name: Build Native C++ Code (Extreme Optimization)
        run: ./gradlew :app:externalNativeBuildDebug --parallel --no-daemon --build-cache --max-workers=2 --configuration-cache
        env:
          CXXFLAGS: "-O3 -flto=thin -march=native"  # Enable max optimizations & thin LTO
          CC: "clang"
          CXX: "clang++"

      - name: Build Debug APK (Fast Mode)
        if: ${{ github.ref == 'refs/heads/master' }}
        run: ./gradlew assembleDebug --parallel --no-daemon --build-cache --configuration-cache --max-workers=2

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-${{ github.run_number }}
          path: app/build/outputs/apk/debug/app-debug.apk
          retention-days: 10